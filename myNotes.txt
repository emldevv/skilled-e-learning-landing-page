Linear gradients and CSS variables
    I have found that I cannot include my custom property variables in the parantheses of a linear gradient function. There is no problem when I include the specific colour references (hexadecimal, hsl etc) and this produces the desired result.

    I reuse the same gradient colour scheme and direction at several points on the site, so it would be convenient to have the gradient as a custom variable. I'm going to play around with it.

    *2 minutes later*
    It works! I transferred the linear gradient function to the custom variable section, and then simply named the variable in the CSS section I wanted to employ it. Nice little discovery.

Shadow on 2nd button
    I must have searched for a full hour just to find a similar example of a shadow being cast foward onto a surfacxe in front of the item. Nothing. I'm sure if I read the articles, set up a sandbox, and tested all different possible paramters I would have eventually discovered it. But I'm trying to get something done here, not becaome the world's second foremost expert on CSS shadow casting. I just went witha standard box shadow.

Positioning an element outside of it's container without clipping it.
    I tried 4 different methods, and finally figured out how to position the icons on each course item half outside the top of the container. It was really simple and makes no syntactical sense, but a negative margin will position it out. No need for absolute positioning either.

    Revisited: DON'T use position absolute with margin adjustments. It is too unpredictable when switching resolutions across devices. The image moves from device to device. The advice I was given by a legend called Chamu, was to use flex and make sure hero container and hero-img have the same parent.

Switching-resolution and Art direction
    This took me 3-days (of mornings) to learn. Whilst I started with an article on art direction, I actually went back to the start of the series that the article was a part of and learned about resolution switching properties , and then art direction. I learned a lot about responsiveness and found it complex an difficult to understand, but I think I will get better and quicker at it as I use it more.

    The difference is determine your use case. The 2 most common/important use cases are:
    1. Are you using the same image across multiple viewport widths? You are using RESOLUTION SWITCHING and you can use srcset().
    2. Are you interchanging images according to viewport widths? You are using ART DIRECTION and you can use <picture>.
    3. Are you doing both? You are suing both, and can apply <picture> srcset() </picture>.